% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nest_if.R
\name{nest_if}
\alias{nest_if}
\title{Nest repeated values from selected variables in a list-variable.}
\usage{
nest_if(data, .predicate, ..., .key = "data")
}
\arguments{
\item{data}{A data frame.}

\item{.predicate}{A predicate function to be applied to the columns or a
logical vector. The variables for which .predicate is or returns TRUE
are nested. This argument is passed to \code{rlang::as_function()} and thus
supports quosure-style lambda functions and strings representing
function names.}

\item{...}{An additional selection of columns after \code{.predicate}.
If empty, all variables selected by \code{.predicate} are selected.
You can supply bare variable names, select all variables between
x and z with \code{x:z}, exclude y with \code{-y}. For more options, see
the \code{\link[dplyr:select]{dplyr::select()}} documentation. See also the section on
selection rules in \code{gather}.}

\item{.key}{The name of the new column, as a string or symbol.

This argument is passed by expression and supports
\link[rlang:quasiquotation]{quasiquotation} (you can unquote strings
and symbols). The name is captured from the expression with
\code{\link[rlang:quo_name]{rlang::quo_name()}} (note that this kind of interface where
symbols do not represent actual objects is now discouraged in the
tidyverse; we support it here for backward compatibility).}
}
\description{
A scoped variant of `nest()`` operate on a selection of variables.
}
\examples{
library(dplyr)
as_tibble(iris) \%>\% nest_if(is.numeric)
# same result by nest
as_tibble(iris) \%>\% nest(-Species)
}
\seealso{
\code{\link[=unnest]{unnest()}} for the inverse operation.
}
